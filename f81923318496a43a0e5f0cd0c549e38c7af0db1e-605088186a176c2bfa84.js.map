{"version":3,"sources":["webpack:///./src/common/components/customVariant.js","webpack:///./src/common/components/List/list.style.js","webpack:///./src/common/components/List/index.js","webpack:///./src/common/components/BlogPost/index.js","webpack:///./src/common/components/Input/input.style.js","webpack:///./src/common/components/Input/index.js","webpack:////Users/aishwarydhare/Work/frontend/SuperProps/Superprops/node_modules/react-icons-kit/ionicons/androidMenu.js","webpack:///./src/common/components/ScrollSpyMenu/index.js","webpack:////Users/aishwarydhare/Work/frontend/SuperProps/Superprops/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:////Users/aishwarydhare/Work/frontend/SuperProps/Superprops/node_modules/@babel/runtime/helpers/esm/extends.js","webpack:////Users/aishwarydhare/Work/frontend/SuperProps/Superprops/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack:////Users/aishwarydhare/Work/frontend/SuperProps/Superprops/node_modules/react-icons-kit/feather/chevronRight.js","webpack:///./src/common/components/Button/button.style.js","webpack:///./src/common/components/Animation/index.js","webpack:///./src/common/components/Loader/loader.style.js","webpack:///./src/common/components/Loader/index.js","webpack:///./src/common/components/Button/index.js","webpack:////Users/aishwarydhare/Work/frontend/SuperProps/Superprops/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:////Users/aishwarydhare/Work/frontend/SuperProps/Superprops/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:////Users/aishwarydhare/Work/frontend/SuperProps/Superprops/node_modules/react-icons-kit/ionicons/androidClose.js"],"names":["buttonStyle","variant","key","colorStyle","prop","sizeStyle","cards","ListWrapper","styled","div","List","className","icon","text","link","to","BlogPost","thumbUrl","title","excerpt","addAllClasses","push","join","src","alt","InputField","themeGet","EyeButton","button","Input","inputElement","htmlFor","label","onBlur","value","onFocus","onChange","inputType","isMaterial","iconPosition","passwordShowHide","props","useState","toggle","focus","state","setState","handleOnFocus","event","handleOnBlur","handleOnChange","target","replace","toLowerCase","LabelPosition","LabelField","id","name","type","onClick","defaultProps","Object","defineProperty","exports","androidMenu","ScrollSpyMenu","menuItems","drawerClose","dispatch","useContext","DrawerContext","scrollItems","forEach","item","path","slice","toggleDrawer","items","map","menu","index","staticLink","href","offset","componentTag","currentClassName","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_extends","assign","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","e","chevronRight","ButtonStyle","alignItems","boxShadow","base","propTypes","displayName","spinner","keyframes","AnimSpinner","css","LoaderStyle","span","loaderColor","Loader","Button","disabled","loader","isLoading","buttonIcon","position","icon-position","_assertThisInitialized","self","ReferenceError","_getPrototypeOf","getPrototypeOf","androidClose"],"mappings":"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","file":"f81923318496a43a0e5f0cd0c549e38c7af0db1e-605088186a176c2bfa84.js","sourcesContent":["import { variant } from 'styled-system';\n\nconst buttonStyle = variant({\n  key: 'buttonStyles',\n});\n\nconst colorStyle = variant({\n  key: 'colorStyles',\n  prop: 'colors',\n});\n\nconst sizeStyle = variant({\n  key: 'sizeStyles',\n  prop: 'size',\n});\n\nexport const cards = variant({ key: 'cards' });\n\nexport { buttonStyle, colorStyle, sizeStyle };\n","import styled from 'styled-components';\n\nconst ListWrapper = styled.div``;\n\nexport { ListWrapper };\n","/* eslint-disable */\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport { ListWrapper } from './list.style';\n\nconst List = ({ className, icon, text, link, ...props }) => (\n  <ListWrapper className={className}>\n    {link ? (\n      <Link to={link}>\n        {icon}\n        {text}\n      </Link>\n    ) : (\n      <>\n        {icon}\n        {text}\n      </>\n    )}\n  </ListWrapper>\n);\n\nexport default List;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BlogPost = ({ className, thumbUrl, title, excerpt, link }) => {\n  // Add all classes to an array\n  const addAllClasses = ['blog_post'];\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return (\n    <div className={addAllClasses.join(' ')}>\n      <div className=\"thumbnail\">\n        <img src={thumbUrl} alt={title} />\n      </div>\n      <div className=\"content\">\n        <h3 className=\"title\">{title}</h3>\n        <p className=\"excerpt\">{excerpt}</p>\n        {link && <div className=\"learn_more\">{link}</div>}\n      </div>\n    </div>\n  );\n};\n\nBlogPost.propTypes = {\n  className: PropTypes.string,\n  thumbUrl: PropTypes.string,\n  title: PropTypes.string,\n  excerpt: PropTypes.string,\n  link: PropTypes.element,\n};\n\nexport default BlogPost;\n","import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nconst InputField = styled.div`\n  position: relative;\n\n  /* Input field wrapper */\n  .field-wrapper {\n    position: relative;\n  }\n\n  /* If input has icon then these styel */\n  &.icon-left,\n  &.icon-right {\n    .field-wrapper {\n      display: flex;\n      align-items: center;\n      > .input-icon {\n        position: absolute;\n        top: 0;\n        bottom: auto;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 34px;\n        height: 40px;\n      }\n    }\n  }\n\n  /* When icon position in left */\n  &.icon-left {\n    .field-wrapper {\n      > .input-icon {\n        left: 0;\n        right: auto;\n      }\n      > input {\n        padding-left: 34px;\n      }\n    }\n  }\n\n  /* When icon position in right */\n  &.icon-right {\n    .field-wrapper {\n      > .input-icon {\n        left: auto;\n        right: 0;\n      }\n      > input {\n        padding-right: 34px;\n      }\n    }\n  }\n\n  /* Label default style */\n  label {\n    display: block;\n    color: ${themeGet('colors.labelColor', '#767676')};\n    font-size: ${themeGet('fontSizes.4', '16')}px;\n    font-weight: ${themeGet('fontWeights.4', '500')};\n    margin-bottom: ${themeGet('space.3', '10')}px;\n    transition: 0.2s ease all;\n  }\n\n  /* Input and textarea default style */\n  textarea,\n  input {\n    font-size: 16px;\n    padding: 11px;\n    display: block;\n    width: 100%;\n    color: ${themeGet('colors.textColor', '#484848')};\n    box-shadow: none;\n    border-radius: 4px;\n    box-sizing: border-box;\n    border: 1px solid ${themeGet('colors.inactiveIcon', '#ebebeb')};\n    transition: border-color 0.2s ease;\n    &:focus {\n      outline: none;\n      border-color: ${themeGet('colors.primary', '#028489')};\n    }\n  }\n\n  textarea {\n    min-height: 150px;\n  }\n\n  /* Input material style */\n  &.is-material {\n    label {\n      position: absolute;\n      left: 0;\n      top: 10px;\n    }\n\n    input,\n    textarea {\n      border-radius: 0;\n      border-top: 0;\n      border-left: 0;\n      border-right: 0;\n      padding-left: 0;\n      padding-right: 0;\n    }\n\n    textarea {\n      min-height: 40px;\n      padding-bottom: 0;\n    }\n\n    .highlight {\n      position: absolute;\n      height: 1px;\n      top: auto;\n      left: 50%;\n      bottom: 0;\n      width: 0;\n      pointer-events: none;\n      transition: all 0.2s ease;\n    }\n\n    /* If input has icon then these styel */\n    &.icon-left,\n    &.icon-right {\n      .field-wrapper {\n        flex-direction: row-reverse;\n        > .input-icon {\n          width: auto;\n        }\n        > input {\n          flex: 1;\n        }\n      }\n    }\n\n    /* When icon position in left */\n    &.icon-left {\n      .field-wrapper {\n        > input {\n          padding-left: 20px;\n        }\n      }\n      label {\n        top: -15px;\n        font-size: 12px;\n      }\n    }\n\n    /* When icon position in right */\n    &.icon-right {\n      .field-wrapper {\n        > input {\n          padding-right: 20px;\n        }\n      }\n    }\n\n    /* Material input focus style */\n    &.is-focus {\n      input {\n        border-color: ${themeGet('colors.inactiveIcon', '#ebebeb')};\n      }\n\n      label {\n        top: -16px;\n        font-size: 12px;\n        color: ${themeGet('colors.textColor', '#484848')};\n      }\n\n      .highlight {\n        width: 100%;\n        height: 2px;\n        background-color: ${themeGet('colors.primary', '#028489')};\n        left: 0;\n      }\n    }\n  }\n`;\n\nconst EyeButton = styled.button`\n  width: 43px;\n  height: 40px;\n  border: 0;\n  padding: 0;\n  margin: 0;\n  top: 0;\n  right: 0;\n  position: absolute;\n  outline: none;\n  cursor: pointer;\n  box-shadow: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: transparent;\n\n  > span {\n    width: 12px;\n    height: 12px;\n    display: block;\n    border: solid 1px ${themeGet('colors.textColor', '#484848')};\n    border-radius: 75% 15%;\n    transform: rotate(45deg);\n    position: relative;\n\n    &:before {\n      content: '';\n      display: block;\n      width: 4px;\n      height: 4px;\n      border-radius: 50%;\n      left: 3px;\n      top: 3px;\n      position: absolute;\n      border: solid 1px ${themeGet('colors.textColor', '#484848')};\n    }\n  }\n\n  &.eye-closed {\n    > span {\n      &:after {\n        content: '';\n        display: block;\n        width: 1px;\n        height: 20px;\n        left: calc(50% - 1px / 2);\n        top: -4px;\n        position: absolute;\n        background-color: ${themeGet('colors.textColor', '#484848')};\n        transform: rotate(-12deg);\n      }\n    }\n  }\n`;\n\nexport { EyeButton };\n\nexport default InputField;\n","/* eslint-disable */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport InputField, { EyeButton } from './input.style';\nconst Input = ({\n  label,\n  value,\n  onBlur,\n  onFocus,\n  onChange,\n  inputType,\n  isMaterial,\n  icon,\n  iconPosition,\n  passwordShowHide,\n  className,\n  ...props\n}) => {\n  // use toggle hooks\n  const [state, setState] = useState({\n    toggle: false,\n    focus: false,\n    value: '',\n  });\n\n  // toggle function\n  const handleToggle = () => {\n    setState({\n      ...state,\n      toggle: !state.toggle,\n    });\n  };\n\n  // add focus class\n  const handleOnFocus = (event) => {\n    setState({\n      ...state,\n      focus: true,\n    });\n    onFocus(event);\n  };\n\n  // remove focus class\n  const handleOnBlur = (event) => {\n    setState({\n      ...state,\n      focus: false,\n    });\n    onBlur(event);\n  };\n\n  // handle input value\n  const handleOnChange = (event) => {\n    setState({\n      ...state,\n      value: event.target.value,\n    });\n    onChange(event.target.value);\n  };\n\n  // get input focus class\n  const getInputFocusClass = () => {\n    if (state.focus === true || state.value !== '') {\n      return 'is-focus';\n    } else {\n      return '';\n    }\n  };\n\n  // init variable\n  let inputElement, htmlFor;\n\n  // Add all classs to an array\n  const addAllClasses = ['reusecore__input'];\n\n  // Add is-material class\n  if (isMaterial) {\n    addAllClasses.push('is-material');\n  }\n\n  // Add icon position class if input element has icon\n  if (icon && iconPosition) {\n    addAllClasses.push(`icon-${iconPosition}`);\n  }\n\n  // Add new class\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  // if lable is not empty\n  if (label) {\n    htmlFor = label.replace(/\\s+/g, '_').toLowerCase();\n  }\n\n  // Label position\n  const LabelPosition = isMaterial === true ? 'bottom' : 'top';\n\n  // Label field\n  const LabelField = label && <label htmlFor={htmlFor}>{label}</label>;\n\n  // Input type check\n  switch (inputType) {\n    case 'textarea':\n      inputElement = (\n        <textarea\n          {...props}\n          id={htmlFor}\n          name={htmlFor}\n          value={state.value}\n          onChange={handleOnChange}\n          onBlur={handleOnBlur}\n          onFocus={handleOnFocus}\n        />\n      );\n      break;\n\n    case 'password':\n      inputElement = (\n        <div className=\"field-wrapper\">\n          <input\n            {...props}\n            id={htmlFor}\n            name={htmlFor}\n            type={state.toggle ? 'password' : 'text'}\n            value={state.value}\n            onChange={handleOnChange}\n            onBlur={handleOnBlur}\n            onFocus={handleOnFocus}\n          />\n          {passwordShowHide && (\n            <EyeButton\n              onClick={handleToggle}\n              className={state.toggle ? 'eye' : 'eye-closed'}\n            >\n              <span />\n            </EyeButton>\n          )}\n        </div>\n      );\n      break;\n\n    default:\n      inputElement = (\n        <div className=\"field-wrapper\">\n          <input\n            {...props}\n            id={htmlFor}\n            name={htmlFor}\n            type={inputType}\n            value={state.value}\n            onChange={handleOnChange}\n            onBlur={handleOnBlur}\n            onFocus={handleOnFocus}\n          />\n          {icon && <span className=\"input-icon\">{icon}</span>}\n        </div>\n      );\n  }\n\n  return (\n    <InputField\n      className={`${addAllClasses.join(' ')} ${getInputFocusClass()}`}\n    >\n      {LabelPosition === 'top' && LabelField}\n      {inputElement}\n      {isMaterial && <span className=\"highlight\" />}\n      {LabelPosition === 'bottom' && LabelField}\n    </InputField>\n  );\n};\n\n/** Inout prop type checking. */\nInput.propTypes = {\n  /** className of the Input component. */\n  className: PropTypes.string,\n\n  /** Set input label value. */\n  label: PropTypes.string,\n\n  /** The input value, required for a controlled component. */\n  value: PropTypes.oneOf(['string', 'number']),\n\n  /** Make default input into material style input. */\n  isMaterial: PropTypes.bool,\n\n  /** Password show hide icon button prop [*only for password field]. */\n  passwordShowHide: PropTypes.bool,\n\n  /** Set input type of the input element. Default type is text. */\n  inputType: PropTypes.oneOf([\n    'text',\n    'email',\n    'password',\n    'number',\n    'textarea',\n  ]),\n\n  /** Add icon in input field. This prop will not work with password\n   * and textarea field.\n   */\n  icon: PropTypes.object,\n\n  /** Set input field icon position. Default position is 'left'. */\n  iconPosition: PropTypes.oneOf(['left', 'right']),\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value`.\n   */\n  onChange: PropTypes.func,\n};\n\n/** Inout default type. */\nInput.defaultProps = {\n  inputType: 'text',\n  isMaterial: false,\n  iconPosition: 'left',\n  onBlur: () => {},\n  onFocus: () => {},\n  onChange: () => {},\n};\n\nexport default Input;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.androidMenu = void 0;\nvar androidMenu = {\n  \"viewBox\": \"0 0 512 512\",\n  \"children\": [{\n    \"name\": \"g\",\n    \"attribs\": {\n      \"id\": \"Icon_3_\"\n    },\n    \"children\": [{\n      \"name\": \"g\",\n      \"attribs\": {},\n      \"children\": [{\n        \"name\": \"g\",\n        \"attribs\": {},\n        \"children\": [{\n          \"name\": \"path\",\n          \"attribs\": {\n            \"d\": \"M64,384h384v-42.666H64V384z M64,277.334h384v-42.667H64V277.334z M64,128v42.665h384V128H64z\"\n          },\n          \"children\": [{\n            \"name\": \"path\",\n            \"attribs\": {\n              \"d\": \"M64,384h384v-42.666H64V384z M64,277.334h384v-42.667H64V277.334z M64,128v42.665h384V128H64z\"\n            },\n            \"children\": []\n          }]\n        }]\n      }]\n    }]\n  }]\n};\nexports.androidMenu = androidMenu;","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Scrollspy from 'react-scrollspy';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\n\nimport { DrawerContext } from '../../contexts/DrawerContext';\n\nconst ScrollSpyMenu = ({ className, menuItems, drawerClose, ...props }) => {\n  const { dispatch } = useContext(DrawerContext);\n  // empty array for scrollspy items\n  const scrollItems = [];\n\n  // convert menu path to scrollspy items\n  menuItems.forEach((item) => {\n    scrollItems.push(item.path.slice(1));\n  });\n\n  // Add all classs to an array\n  const addAllClasses = ['scrollspy__menu'];\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  // Close drawer when click on menu item\n  const toggleDrawer = () => {\n    dispatch({\n      type: 'TOGGLE',\n    });\n  };\n\n  return (\n    <Scrollspy\n      items={scrollItems}\n      className={addAllClasses.join(' ')}\n      drawerClose={drawerClose}\n      {...props}\n    >\n      {menuItems.map((menu, index) => (\n        <li key={`menu-item-${index}`}>\n          {menu.staticLink ? (\n            <a href={menu.path}>{menu.label}</a>\n          ) : (\n            <>\n              {drawerClose ? (\n                <AnchorLink\n                  href={menu.path}\n                  offset={menu.offset}\n                  onClick={toggleDrawer}\n                >\n                  {menu.label}\n                </AnchorLink>\n              ) : (\n                <AnchorLink href={menu.path} offset={menu.offset}>\n                  {menu.label}\n                </AnchorLink>\n              )}\n            </>\n          )}\n        </li>\n      ))}\n    </Scrollspy>\n  );\n};\n\nScrollSpyMenu.propTypes = {\n  /** className of the ScrollSpyMenu. */\n  className: PropTypes.string,\n\n  /** menuItems is an array of object prop which contain your menu\n   * data.\n   */\n  menuItems: PropTypes.array.isRequired,\n\n  /** Class name that apply to the navigation element paired with the content element in viewport. */\n  currentClassName: PropTypes.string,\n\n  /** Class name that apply to the navigation elements that have been scrolled past [optional]. */\n  scrolledPastClassName: PropTypes.string,\n\n  /** HTML tag for Scrollspy component if you want to use other than <ul/> [optional]. */\n  componentTag: PropTypes.string,\n\n  /** Style attribute to be passed to the generated <ul/> element [optional]. */\n  style: PropTypes.object,\n\n  /** Offset value that adjusts to determine the elements are in the viewport [optional]. */\n  offset: PropTypes.number,\n\n  /** Name of the element of scrollable container that can be used with querySelector [optional]. */\n  rootEl: PropTypes.string,\n\n  /**\n   * Function to be executed when the active item has been updated [optional].\n   */\n  onUpdate: PropTypes.func,\n};\n\nScrollSpyMenu.defaultProps = {\n  componentTag: 'ul',\n  currentClassName: 'is-current',\n};\n\nexport default ScrollSpyMenu;\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.chevronRight = void 0;\nvar chevronRight = {\n  \"viewBox\": \"0 0 24 24\",\n  \"children\": [{\n    \"name\": \"polyline\",\n    \"attribs\": {\n      \"points\": \"9 18 15 12 9 6\"\n    },\n    \"children\": []\n  }],\n  \"attribs\": {\n    \"fill\": \"none\",\n    \"stroke\": \"currentColor\",\n    \"stroke-width\": \"2\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\"\n  }\n};\nexports.chevronRight = chevronRight;","import styled from 'styled-components';\nimport { variant, alignItems, boxShadow } from 'styled-system';\nimport { themeGet } from '@styled-system/theme-get';\nimport { buttonStyle, colorStyle, sizeStyle } from '../customVariant';\nimport { base } from '../base';\n\nconst ButtonStyle = styled.button`\n  /* button default style */\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: ${themeGet('colors.white', '#ffffff')};\n  background-color: ${themeGet('colors.primary', '#028489')};\n  min-height: ${themeGet('heights.3', '48')}px;\n  min-width: ${themeGet('widths.3', '48')}px;\n  border-radius: ${themeGet('radius.0', '3')}px;\n  font-family: inherit;\n  font-size: ${themeGet('fontSizes.4', '16')}px;\n  font-weight: ${themeGet('fontWeights.4', '500')};\n  text-decoration: none;\n  text-transform: capitalize;\n  padding-top: ${themeGet('space.2', '8')}px;\n  padding-bottom: ${themeGet('space.2', '8')}px;\n  padding-left: ${themeGet('space.4', '15')}px;\n  padding-right: ${themeGet('space.4', '15')}px;\n  border: 0;\n  transition: all 0.3s ease;\n  span.btn-text {\n    padding-left: ${themeGet('space.1', '4')}px;\n    padding-right: ${themeGet('space.1', '4')}px;\n  }\n  span.btn-icon {\n    display: flex;\n    > div {\n      display: flex !important;\n    }\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  /* Material style goes here */\n  &.is-material {\n    box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.2),\n      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 3px 1px -2px rgba(0, 0, 0, 0.12);\n  }\n\n  /* When button on loading stage */\n  &.is-loading {\n    .btn-text {\n      padding-left: ${themeGet('space.2', '8')}px;\n      padding-right: ${themeGet('space.2', '8')}px;\n    }\n  }\n\n  /* Style system support */\n  ${alignItems}\n  ${boxShadow}\n  ${buttonStyle}\n  ${colorStyle}\n  ${sizeStyle}\n  ${base}\n`;\n\n// prop types can also be added from the style functions\nButtonStyle.propTypes = {\n  ...alignItems.propTypes,\n  ...boxShadow.propTypes,\n  ...variant.propTypes,\n};\n\nButtonStyle.displayName = 'ButtonStyle';\n\nexport default ButtonStyle;\n","import { css, keyframes } from 'styled-components';\n\nconst spinner = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  50% {\n    transform: rotate(180deg);\n    opacity: 0.5;\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst AnimSpinner = css`\n  animation: ${spinner} 1s linear infinite;\n`;\n\nexport { AnimSpinner };\n","import styled from 'styled-components';\nimport { variant } from 'styled-system';\nimport { colorStyle } from '../customVariant';\nimport { AnimSpinner } from '../Animation';\nimport { base } from '../base';\n\nconst LoaderStyle = styled.span`\n  /* loader default style */\n  display: inline-flex;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  overflow: hidden;\n  border-width: 2px;\n  border-style: solid;\n  border-color: ${(props) =>\n    props.loaderColor ? props.loaderColor : '#000000'};\n  border-top-color: transparent !important;\n\n  /* animation goes here */\n  ${AnimSpinner}\n  /* Style system custome color variant */\n  ${colorStyle}\n  ${base}\n`;\n\n// prop types can also be added from the style functions\nLoaderStyle.propTypes = {\n  ...variant.propTypes,\n};\n\nLoaderStyle.displayName = 'LoaderStyle';\n\nexport default LoaderStyle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LoaderStyle from './loader.style';\n\nconst Loader = ({ loaderColor, className, ...props }) => {\n  // Add all classs to an array\n  const addAllClasses = ['reusecore__loader'];\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n  return (\n    <LoaderStyle\n      className={addAllClasses.join(' ')}\n      loaderColor={loaderColor}\n      {...props}\n    />\n  );\n};\n\nLoader.propTypes = {\n  /** ClassName of the Loader */\n  className: PropTypes.string,\n\n  /** Set loader width in number || string */\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Set loader height in number || string */\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Set color for loader */\n  loaderColor: PropTypes.string,\n};\n\nLoader.defaultProps = {};\n\nexport default Loader;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonStyle from './button.style';\nimport Loader from '../Loader';\n\nconst Button = ({\n  type,\n  title,\n  icon,\n  disabled,\n  iconPosition,\n  onClick,\n  loader,\n  loaderColor,\n  isMaterial,\n  isLoading,\n  className,\n  ...props\n}) => {\n  // Add all classs to an array\n  const addAllClasses = ['reusecore__button'];\n\n  // isLoading prop checking\n  if (isLoading) {\n    addAllClasses.push('is-loading');\n  }\n\n  // isMaterial prop checking\n  if (isMaterial) {\n    addAllClasses.push('is-material');\n  }\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  // Checking button loading state\n  const buttonIcon =\n    isLoading !== false ? (\n      <Fragment>\n        {loader ? loader : <Loader loaderColor={loaderColor || '#30C56D'} />}\n      </Fragment>\n    ) : (\n      icon && <span className=\"btn-icon\">{icon}</span>\n    );\n\n  // set icon position\n  const position = iconPosition || 'right';\n\n  return (\n    <ButtonStyle\n      type={type}\n      className={addAllClasses.join(' ')}\n      icon={icon}\n      disabled={disabled}\n      icon-position={position}\n      onClick={onClick}\n      {...props}\n    >\n      {position === 'left' && buttonIcon}\n      {title && <span className=\"btn-text\">{title}</span>}\n      {position === 'right' && buttonIcon}\n    </ButtonStyle>\n  );\n};\n\nButton.propTypes = {\n  /** ClassName of the button */\n  className: PropTypes.string,\n\n  /** Add icon */\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\n\n  /** Add icon */\n  icon: PropTypes.object,\n\n  /** Add loader */\n  loader: PropTypes.object,\n\n  /** Add Material effect */\n  isMaterial: PropTypes.bool,\n\n  /** Button Loading state */\n  isLoading: PropTypes.bool,\n\n  /** Button Loading state */\n  loaderColor: PropTypes.string,\n\n  /** If true button will be disabled */\n  disabled: PropTypes.bool,\n\n  /** Adjust your icon and loader position [if you use loader] */\n  iconPosition: PropTypes.oneOf(['left', 'right']),\n\n  /** Variant change button shape */\n  variant: PropTypes.oneOf(['textButton', 'outlined', 'fab', 'extendedFab']),\n\n  /** primary || secondary || warning || error  change text and border color.\n   *  And primaryWithBg || secondaryWithBg || warningWithBg || errorWithBg change text, border and background color */\n  colors: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'warning',\n    'error',\n    'primaryWithBg',\n    'secondaryWithBg',\n    'warningWithBg',\n    'errorWithBg',\n  ]),\n\n  /**\n   * Gets called when the user clicks on the button\n   */\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  disabled: false,\n  isMaterial: false,\n  isLoading: false,\n  type: 'button',\n};\n\nexport default Button;\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.androidClose = void 0;\nvar androidClose = {\n  \"viewBox\": \"0 0 512 512\",\n  \"children\": [{\n    \"name\": \"g\",\n    \"attribs\": {\n      \"id\": \"Icon_5_\"\n    },\n    \"children\": [{\n      \"name\": \"g\",\n      \"attribs\": {},\n      \"children\": [{\n        \"name\": \"g\",\n        \"attribs\": {},\n        \"children\": [{\n          \"name\": \"polygon\",\n          \"attribs\": {\n            \"points\": \"405,136.798 375.202,107 256,226.202 136.798,107 107,136.798 226.202,256 107,375.202 136.798,405 256,285.798 \\r\\n\\t\\t\\t375.202,405 405,375.202 285.798,256 \\t\\t\"\n          },\n          \"children\": [{\n            \"name\": \"polygon\",\n            \"attribs\": {\n              \"points\": \"405,136.798 375.202,107 256,226.202 136.798,107 107,136.798 226.202,256 107,375.202 136.798,405 256,285.798 \\r\\n\\t\\t\\t375.202,405 405,375.202 285.798,256 \\t\\t\"\n            },\n            \"children\": []\n          }]\n        }]\n      }]\n    }]\n  }]\n};\nexports.androidClose = androidClose;"],"sourceRoot":""}