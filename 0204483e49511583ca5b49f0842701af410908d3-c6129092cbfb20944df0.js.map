{"version":3,"sources":["webpack:///./src/common/components/GlideCarousel/glideSlide.js","webpack:///./src/common/components/GlideCarousel/index.js","webpack:///./src/common/components/GlideCarousel/glide.style.js","webpack:////Users/aishwarydhare/Work/frontend/SuperProps/Superprops/node_modules/@glidejs/glide/dist/glide.esm.js"],"names":["GlideSlide","children","className","GlideCarousel","options","controls","prevButton","nextButton","prevWrapper","nextWrapper","bullets","numberOfBullets","buttonWrapperStyle","bulletWrapperStyle","bulletButtonStyle","carouselSelector","addAllClasses","push","totalBullets","i","useEffect","Glide","mount","join","id","data-glide-el","data-glide-dir","aria-label","map","index","key","defaultProps","GlideWrapper","styled","div","width","height","space","GlideSlideWrapper","li","color","borders","boxShadow","borderRadius","ButtonWrapper","display","position","top","left","right","bottom","ButtonControlWrapper","alignItems","justifyContent","BulletControlWrapper","flexWrap","BulletButton","button","DefaultBtn","defaults","type","startAt","perView","focusAt","gap","autoplay","hoverpause","keyboard","bound","swipeThreshold","dragThreshold","perTouch","touchRatio","touchAngle","animationDuration","rewind","rewindDuration","animationTimingFunc","throttle","direction","peek","breakpoints","classes","ltr","rtl","slider","carousel","swipeable","dragging","cloneSlide","activeNav","activeSlide","disabledArrow","warn","msg","console","error","_typeof","Symbol","iterator","obj","constructor","prototype","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","length","descriptor","enumerable","configurable","writable","Object","defineProperty","protoProps","staticProps","_extends","assign","arguments","source","hasOwnProperty","call","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","value","getter","possibleConstructorReturn","self","ReferenceError","toInt","parseInt","isString","isObject","isFunction","isUndefined","isArray","Array","glide","extensions","events","components","name","_name","define","prop","definition","mergeOptions","settings","EventsBus","this","hop","event","handler","on","remove","context","emit","forEach","item","selector","_c","_t","_e","disabled","transformers","pattern","Run","make","distance","Transition","disable","Move","interval","_o","set","o","_i","_d","status","now","Date","getTime","func","wait","timeout","args","result","previous","later","leading","apply","throttled","at","remaining","clearTimeout","trailing","setTimeout","cancel","MARGIN_TYPE","siblings","node","parentNode","n","firstChild","matched","nextSibling","nodeType","exist","window","HTMLElement","EventsBinder","listeners","el","closure","capture","addEventListener","removeEventListener","VALID_DIRECTIONS","FLIPED_MOVEMENTS","Rtl","Components","modify","translate","Direction","is","Gap","Gaps","Grow","Clones","grow","Peeking","Peek","before","Focusing","Sizes","slideWidth","supportsPassive","opts","e","supportsPassive$1","START_EVENTS","MOVE_EVENTS","END_EVENTS","MOUSE_EVENTS","sortBreakpoints","points","keys","sort","reduce","r","k","COMPONENTS","Html","root","track","querySelector","slides","slice","wrapper","filter","slide","classList","contains","_r","document","t","Translate","Events","transform","TRANSFORMERS","concat","mutate","transformer","mutator","style","isType","isOffset","after","movement","compose","duration","transition","callback","enable","offset","resolve","token","split","addClass","add","removeClass","_v","indexOf","setupSlides","setupWrapper","dimention","wrapperSize","offsetWidth","reductor","len","marginLeft","marginRight","_this","items","collect","_Glide$settings","peekIncrementer","part","start","end","Math","max","floor","clone","cloneNode","_clone","unshift","append","_Components$Html","half","prepend","reverse","appendChild","_i2","insertBefore","_i3","removeChild","Resize","Binder","bind","unbind","off","destroy","Build","typeClass","activeClass","sibling","removeClasses","move","calculate","isStart","isEnd","steps","countableSteps","min","_m","step","substr","Swipe","swipeSin","swipeStartX","swipeStartY","passive","bindSwipeStart","swipe","touches","pageX","pageY","bindSwipeMove","bindSwipeEnd","subExSx","subEySy","powEX","abs","powEY","swipeHypotenuse","sqrt","swipeCathetus","asin","PI","stopPropagation","parseFloat","threshold","swipeDistance","swipeDeg","round","unbindSwipeMove","unbindSwipeEnd","unbindSwipeStart","_this2","_this3","changedTouches","Images","dragstart","preventDefault","Anchors","detached","prevented","_a","querySelectorAll","click","detach","draggable","setAttribute","getAttribute","removeAttribute","attach","Controls","_n","addBindings","setActive","removeActive","removeBindings","elements","currentTarget","Keyboard","press","keyCode","Autoplay","setInterval","stop","time","clearInterval","Breakpoints","match","matchMedia","point","matches","Glide$1","_Core","Glide$$1","__proto__","subClass","superClass","create","setPrototypeOf","inherits"],"mappings":"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","file":"0204483e49511583ca5b49f0842701af410908d3-c6129092cbfb20944df0.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlideSlideWrapper } from './glide.style';\n\n// Glide Slide wrapper component\nconst GlideSlide = ({ children }) => {\n  return (\n    <GlideSlideWrapper className=\"glide__slide\">{children}</GlideSlideWrapper>\n  );\n};\n\nGlideSlide.propTypes = {\n  /** Children. */\n  children: PropTypes.element,\n};\n\nexport default GlideSlide;\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Glide from '@glidejs/glide';\nimport '@glidejs/glide/dist/css/glide.core.min.css';\nimport GlideWrapper, {\n  ButtonControlWrapper,\n  ButtonWrapper,\n  BulletControlWrapper,\n  BulletButton,\n  DefaultBtn,\n} from './glide.style';\n\nconst GlideCarousel = ({\n  className,\n  children,\n  options,\n  controls,\n  prevButton,\n  nextButton,\n  prevWrapper,\n  nextWrapper,\n  bullets,\n  numberOfBullets,\n  buttonWrapperStyle,\n  bulletWrapperStyle,\n  bulletButtonStyle,\n  carouselSelector,\n}) => {\n  // Add all classs to an array\n  const addAllClasses = ['glide'];\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  // number of bullets loop\n  const totalBullets = [];\n  for (let i = 0; i < numberOfBullets; i++) {\n    totalBullets.push(i);\n  }\n\n  // Load glide\n  useEffect(() => {\n    const glide = new Glide(\n      carouselSelector ? `#${carouselSelector}` : '#glide',\n      {\n        ...options,\n      }\n    );\n    glide.mount();\n  });\n\n  return (\n    <GlideWrapper\n      className={addAllClasses.join(' ')}\n      id={carouselSelector || 'glide'}\n    >\n      <div className=\"glide__track\" data-glide-el=\"track\">\n        <ul className=\"glide__slides\">{children}</ul>\n      </div>\n\n      {/** if controls prop true then show glide controls nav */}\n      {controls && (\n        <ButtonControlWrapper\n          className=\"glide__controls\"\n          data-glide-el=\"controls\"\n          {...buttonWrapperStyle}\n        >\n          <ButtonWrapper\n            {...prevWrapper}\n            className=\"glide__prev--area\"\n            data-glide-dir=\"<\"\n            aria-label=\"prev\"\n          >\n            {prevButton ? prevButton : <DefaultBtn>Prev</DefaultBtn>}\n          </ButtonWrapper>\n          <ButtonWrapper\n            {...nextWrapper}\n            className=\"glide__next--area\"\n            data-glide-dir=\">\"\n            aria-label=\"next\"\n          >\n            {nextButton ? nextButton : <DefaultBtn>Next</DefaultBtn>}\n          </ButtonWrapper>\n        </ButtonControlWrapper>\n      )}\n\n      {/** if bullets prop true then show glide bullets nav */}\n      {bullets && (\n        <BulletControlWrapper\n          className=\"glide__bullets\"\n          data-glide-el=\"controls[nav]\"\n          {...bulletWrapperStyle}\n        >\n          <Fragment>\n            {totalBullets.map((index) => (\n              <BulletButton\n                key={index}\n                className=\"glide__bullet\"\n                data-glide-dir={`=${index}`}\n                aria-label={`bullet${index + 1}`}\n                {...bulletButtonStyle}\n              />\n            ))}\n          </Fragment>\n        </BulletControlWrapper>\n      )}\n    </GlideWrapper>\n  );\n};\n\nGlideCarousel.propTypes = {\n  /** className of the GlideCarousel. */\n  className: PropTypes.string,\n\n  /** Children. */\n  children: PropTypes.element,\n\n  /** You can add your custom glid options using this prop. */\n  options: PropTypes.object,\n\n  /** Hide || show controls nav. */\n  controls: PropTypes.bool,\n\n  /** Hide || show bullets nav. */\n  bullets: PropTypes.bool,\n\n  /** This prop only take your slider / carousel / testimonials data length. */\n  numberOfBullets: PropTypes.number,\n\n  /** bulletWrapperStyle is a bullet control wrapper style object prop.\n   * It's contain display, space, alignItems,\n   * justifyContent and flexWrap style-system prop.\n   */\n  bulletWrapperStyle: PropTypes.object,\n\n  /** buttonWrapperStyle is a button control wrapper style object prop.\n   * It's contain same as buttonWrapperStyle style-system prop and\n   * position, left, right, top and bottom.\n   */\n  buttonWrapperStyle: PropTypes.object,\n\n  /** prevWrapper is a previous button wrapper style object prop.\n   * It's contain display, space, bg, borders, boxShadow, borderRadius,\n   * position, top, left, right and bottom style-system prop.\n   */\n  prevWrapper: PropTypes.object,\n\n  /** nextWrapper is a next button wrapper style object prop.\n   * It's contain same as prevWrapper style-system prop.\n   */\n  nextWrapper: PropTypes.object,\n\n  /** Set previous button for glide carousel. */\n  prevButton: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n  /** Set next button for glide carousel. */\n  nextButton: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n  /** bulletButtonStyle is a bullet button style object prop.\n   * It's contain  display, width, height, space,\n   * bg, borders, boxShadow and borderRadius style-system prop.\n   */\n  bulletButtonStyle: PropTypes.object,\n};\n\n// GlideCarousel default props\nGlideCarousel.defaultProps = {\n  controls: true,\n  bullets: false,\n};\n\nexport default GlideCarousel;\n","import styled from 'styled-components';\nimport {\n  width,\n  height,\n  display,\n  space,\n  color,\n  borders,\n  boxShadow,\n  borderRadius,\n  position,\n  top,\n  left,\n  right,\n  bottom,\n  alignItems,\n  justifyContent,\n  flexWrap,\n} from 'styled-system';\n\n// Glide wrapper style\nconst GlideWrapper = styled.div`\n  ${width}\n  ${height}\n  ${space}\n`;\n\n// Glide slide wrapper style\nconst GlideSlideWrapper = styled.li`\n  ${space}\n  ${color}\n  ${borders}\n  ${boxShadow}\n  ${borderRadius}\n`;\n\n// Button wrapper style\nconst ButtonWrapper = styled.div`\n  display: inline-block;\n  ${display}\n  ${space}\n  ${color}\n  ${borders}\n  ${boxShadow}\n  ${borderRadius}\n  ${position}\n  ${top}\n  ${left}\n  ${right}\n  ${bottom}\n`;\n\n// ButtonControlWrapper style\nconst ButtonControlWrapper = styled.div`\n  ${display}\n  ${space}\n  ${alignItems}\n  ${justifyContent}\n  ${position}\n  ${top}\n  ${left}\n  ${right}\n  ${bottom}\n`;\n\n// BulletControlWrapper style\nconst BulletControlWrapper = styled.div`\n  ${display}\n  ${space}\n  ${alignItems}\n  ${justifyContent}\n  ${flexWrap}\n`;\n\n// BulletButton style\nconst BulletButton = styled.button`\n  cursor: pointer;\n  width: 10px;\n  height: 10px;\n  margin: 4px;\n  border: 0;\n  padding: 0;\n  outline: none;\n  border-radius: 50%;\n  background-color: #d6d6d6;\n\n  &:hover,\n  &.glide__bullet--active {\n    background-color: #869791;\n  }\n\n  ${display}\n  ${space}\n  ${color}\n  ${borders}\n  ${boxShadow}\n  ${borderRadius}\n  ${width}\n  ${height}\n`;\n\n// default button style\nconst DefaultBtn = styled.button`\n  cursor: pointer;\n  margin: 10px 3px;\n`;\n\nexport {\n  GlideSlideWrapper,\n  ButtonControlWrapper,\n  ButtonWrapper,\n  BulletControlWrapper,\n  BulletButton,\n  DefaultBtn,\n};\nexport default GlideWrapper;\n","import \"core-js/modules/es.array.reduce\";\n\n/*!\n * Glide.js v3.4.1\n * (c) 2013-2019 Jędrzej Chałubek <jedrzej.chalubek@gmail.com> (http://jedrzejchalubek.com/)\n * Released under the MIT License.\n */\nvar defaults = {\n  /**\n   * Type of the movement.\n   *\n   * Available types:\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n   *\n   * @type {String}\n   */\n  type: 'slider',\n\n  /**\n   * Start at specific slide number defined with zero-based index.\n   *\n   * @type {Number}\n   */\n  startAt: 0,\n\n  /**\n   * A number of slides visible on the single viewport.\n   *\n   * @type {Number}\n   */\n  perView: 1,\n\n  /**\n   * Focus currently active slide at a specified position in the track.\n   *\n   * Available inputs:\n   * `center` - Current slide will be always focused at the center of a track.\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n   *\n   * @type {String|Number}\n   */\n  focusAt: 0,\n\n  /**\n   * A size of the gap added between slides.\n   *\n   * @type {Number}\n   */\n  gap: 10,\n\n  /**\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\n   *\n   * @type {Number|Boolean}\n   */\n  autoplay: false,\n\n  /**\n   * Stop autoplay on mouseover event.\n   *\n   * @type {Boolean}\n   */\n  hoverpause: true,\n\n  /**\n   * Allow for changing slides with left and right keyboard arrows.\n   *\n   * @type {Boolean}\n   */\n  keyboard: true,\n\n  /**\n   * Stop running `perView` number of slides from the end. Use this\n   * option if you don't want to have an empty space after\n   * a slider. Works only with `slider` type and a\n   * non-centered `focusAt` setting.\n   *\n   * @type {Boolean}\n   */\n  bound: false,\n\n  /**\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n   *\n   * @type {Number|Boolean}\n   */\n  swipeThreshold: 80,\n\n  /**\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n   *\n   * @type {Number|Boolean}\n   */\n  dragThreshold: 120,\n\n  /**\n   * A maximum number of slides to which movement will be made on swiping or dragging. Use `false` for unlimited.\n   *\n   * @type {Number|Boolean}\n   */\n  perTouch: false,\n\n  /**\n   * Moving distance ratio of the slides on a swiping and dragging.\n   *\n   * @type {Number}\n   */\n  touchRatio: 0.5,\n\n  /**\n   * Angle required to activate slides moving on swiping or dragging.\n   *\n   * @type {Number}\n   */\n  touchAngle: 45,\n\n  /**\n   * Duration of the animation in milliseconds.\n   *\n   * @type {Number}\n   */\n  animationDuration: 400,\n\n  /**\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\n   *\n   * @type {Boolean}\n   */\n  rewind: true,\n\n  /**\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\n   *\n   * @type {Number}\n   */\n  rewindDuration: 800,\n\n  /**\n   * Easing function for the animation.\n   *\n   * @type {String}\n   */\n  animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\n\n  /**\n   * Throttle costly events at most once per every wait milliseconds.\n   *\n   * @type {Number}\n   */\n  throttle: 10,\n\n  /**\n   * Moving direction mode.\n   *\n   * Available inputs:\n   * - 'ltr' - left to right movement,\n   * - 'rtl' - right to left movement.\n   *\n   * @type {String}\n   */\n  direction: 'ltr',\n\n  /**\n   * The distance value of the next and previous viewports which\n   * have to peek in the current view. Accepts number and\n   * pixels as a string. Left and right peeking can be\n   * set up separately with a directions object.\n   *\n   * For example:\n   * `100` - Peek 100px on the both sides.\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n   *\n   * @type {Number|String|Object}\n   */\n  peek: 0,\n\n  /**\n   * Collection of options applied at specified media breakpoints.\n   * For example: display two slides per view under 800px.\n   * `{\n   *   '800px': {\n   *     perView: 2\n   *   }\n   * }`\n   */\n  breakpoints: {},\n\n  /**\n   * Collection of internally used HTML classes.\n   *\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n   * @type {Object}\n   */\n  classes: {\n    direction: {\n      ltr: 'glide--ltr',\n      rtl: 'glide--rtl'\n    },\n    slider: 'glide--slider',\n    carousel: 'glide--carousel',\n    swipeable: 'glide--swipeable',\n    dragging: 'glide--dragging',\n    cloneSlide: 'glide__slide--clone',\n    activeNav: 'glide__bullet--active',\n    activeSlide: 'glide__slide--active',\n    disabledArrow: 'glide__arrow--disabled'\n  }\n};\n/**\n * Outputs warning message to the bowser console.\n *\n * @param  {String} msg\n * @return {Void}\n */\n\nfunction warn(msg) {\n  console.error(\"[Glide warn]: \" + msg);\n}\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n/**\n * Converts value entered as number\n * or string to integer value.\n *\n * @param {String} value\n * @returns {Number}\n */\n\n\nfunction toInt(value) {\n  return parseInt(value);\n}\n/**\n * Converts value entered as number\n * or string to flat value.\n *\n * @param {String} value\n * @returns {Number}\n */\n\n\nfunction toFloat(value) {\n  return parseFloat(value);\n}\n/**\n * Indicates whether the specified value is a string.\n *\n * @param  {*}   value\n * @return {Boolean}\n */\n\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n/**\n * Indicates whether the specified value is an object.\n *\n * @param  {*} value\n * @return {Boolean}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\n\nfunction isObject(value) {\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n}\n/**\n * Indicates whether the specified value is a number.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\n\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n/**\n * Indicates whether the specified value is a function.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * Indicates whether the specified value is undefined.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Indicates whether the specified value is an array.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\n\nfunction isArray(value) {\n  return value.constructor === Array;\n}\n/**\n * Creates and initializes specified collection of extensions.\n * Each extension receives access to instance of glide and rest of components.\n *\n * @param {Object} glide\n * @param {Object} extensions\n *\n * @returns {Object}\n */\n\n\nfunction mount(glide, extensions, events) {\n  var components = {};\n\n  for (var name in extensions) {\n    if (isFunction(extensions[name])) {\n      components[name] = extensions[name](glide, components, events);\n    } else {\n      warn('Extension must be a function');\n    }\n  }\n\n  for (var _name in components) {\n    if (isFunction(components[_name].mount)) {\n      components[_name].mount();\n    }\n  }\n\n  return components;\n}\n/**\n * Defines getter and setter property on the specified object.\n *\n * @param  {Object} obj         Object where property has to be defined.\n * @param  {String} prop        Name of the defined property.\n * @param  {Object} definition  Get and set definitions for the property.\n * @return {Void}\n */\n\n\nfunction define(obj, prop, definition) {\n  Object.defineProperty(obj, prop, definition);\n}\n/**\n * Sorts aphabetically object keys.\n *\n * @param  {Object} obj\n * @return {Object}\n */\n\n\nfunction sortKeys(obj) {\n  return Object.keys(obj).sort().reduce(function (r, k) {\n    r[k] = obj[k];\n    return r[k], r;\n  }, {});\n}\n/**\n * Merges passed settings object with default options.\n *\n * @param  {Object} defaults\n * @param  {Object} settings\n * @return {Object}\n */\n\n\nfunction mergeOptions(defaults, settings) {\n  var options = _extends({}, defaults, settings); // `Object.assign` do not deeply merge objects, so we\n  // have to do it manually for every nested object\n  // in options. Although it does not look smart,\n  // it's smaller and faster than some fancy\n  // merging deep-merge algorithm script.\n\n\n  if (settings.hasOwnProperty('classes')) {\n    options.classes = _extends({}, defaults.classes, settings.classes);\n\n    if (settings.classes.hasOwnProperty('direction')) {\n      options.classes.direction = _extends({}, defaults.classes.direction, settings.classes.direction);\n    }\n  }\n\n  if (settings.hasOwnProperty('breakpoints')) {\n    options.breakpoints = _extends({}, defaults.breakpoints, settings.breakpoints);\n  }\n\n  return options;\n}\n\nvar EventsBus = function () {\n  /**\n   * Construct a EventBus instance.\n   *\n   * @param {Object} events\n   */\n  function EventsBus() {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, EventsBus);\n    this.events = events;\n    this.hop = events.hasOwnProperty;\n  }\n  /**\n   * Adds listener to the specifed event.\n   *\n   * @param {String|Array} event\n   * @param {Function} handler\n   */\n\n\n  createClass(EventsBus, [{\n    key: 'on',\n    value: function on(event, handler) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.on(event[i], handler);\n        }\n      } // Create the event's object if not yet created\n\n\n      if (!this.hop.call(this.events, event)) {\n        this.events[event] = [];\n      } // Add the handler to queue\n\n\n      var index = this.events[event].push(handler) - 1; // Provide handle back for removal of event\n\n      return {\n        remove: function remove() {\n          delete this.events[event][index];\n        }\n      };\n    }\n    /**\n     * Runs registered handlers for specified event.\n     *\n     * @param {String|Array} event\n     * @param {Object=} context\n     */\n\n  }, {\n    key: 'emit',\n    value: function emit(event, context) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.emit(event[i], context);\n        }\n      } // If the event doesn't exist, or there's no handlers in queue, just leave\n\n\n      if (!this.hop.call(this.events, event)) {\n        return;\n      } // Cycle through events queue, fire!\n\n\n      this.events[event].forEach(function (item) {\n        item(context || {});\n      });\n    }\n  }]);\n  return EventsBus;\n}();\n\nvar Glide = function () {\n  /**\r\n   * Construct glide.\r\n   *\r\n   * @param  {String} selector\r\n   * @param  {Object} options\r\n   */\n  function Glide(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, Glide);\n    this._c = {};\n    this._t = [];\n    this._e = new EventsBus();\n    this.disabled = false;\n    this.selector = selector;\n    this.settings = mergeOptions(defaults, options);\n    this.index = this.settings.startAt;\n  }\n  /**\r\n   * Initializes glide.\r\n   *\r\n   * @param {Object} extensions Collection of extensions to initialize.\r\n   * @return {Glide}\r\n   */\n\n\n  createClass(Glide, [{\n    key: 'mount',\n    value: function mount$$1() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._e.emit('mount.before');\n\n      if (isObject(extensions)) {\n        this._c = mount(this, extensions, this._e);\n      } else {\n        warn('You need to provide a object on `mount()`');\n      }\n\n      this._e.emit('mount.after');\n\n      return this;\n    }\n    /**\r\n     * Collects an instance `translate` transformers.\r\n     *\r\n     * @param  {Array} transformers Collection of transformers.\r\n     * @return {Void}\r\n     */\n\n  }, {\n    key: 'mutate',\n    value: function mutate() {\n      var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (isArray(transformers)) {\n        this._t = transformers;\n      } else {\n        warn('You need to provide a array on `mutate()`');\n      }\n\n      return this;\n    }\n    /**\r\n     * Updates glide with specified settings.\r\n     *\r\n     * @param {Object} settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'update',\n    value: function update() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.settings = mergeOptions(this.settings, settings);\n\n      if (settings.hasOwnProperty('startAt')) {\n        this.index = settings.startAt;\n      }\n\n      this._e.emit('update');\n\n      return this;\n    }\n    /**\r\n     * Change slide with specified pattern. A pattern must be in the special format:\r\n     * `>` - Move one forward\r\n     * `<` - Move one backward\r\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n     * `>>` - Rewinds to end (last slide)\r\n     * `<<` - Rewinds to start (first slide)\r\n     *\r\n     * @param {String} pattern\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'go',\n    value: function go(pattern) {\n      this._c.Run.make(pattern);\n\n      return this;\n    }\n    /**\r\n     * Move track by specified distance.\r\n     *\r\n     * @param {String} distance\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'move',\n    value: function move(distance) {\n      this._c.Transition.disable();\n\n      this._c.Move.make(distance);\n\n      return this;\n    }\n    /**\r\n     * Destroy instance and revert all changes done by this._c.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._e.emit('destroy');\n\n      return this;\n    }\n    /**\r\n     * Start instance autoplaying.\r\n     *\r\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (interval) {\n        this.settings.autoplay = interval;\n      }\n\n      this._e.emit('play');\n\n      return this;\n    }\n    /**\r\n     * Stop instance autoplaying.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this._e.emit('pause');\n\n      return this;\n    }\n    /**\r\n     * Sets glide into a idle status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      this.disabled = true;\n      return this;\n    }\n    /**\r\n     * Sets glide into a active status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'enable',\n    value: function enable() {\n      this.disabled = false;\n      return this;\n    }\n    /**\r\n     * Adds cuutom event listener with handler.\r\n     *\r\n     * @param  {String|Array} event\r\n     * @param  {Function} handler\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'on',\n    value: function on(event, handler) {\n      this._e.on(event, handler);\n\n      return this;\n    }\n    /**\r\n     * Checks if glide is a precised type.\r\n     *\r\n     * @param  {String} name\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: 'isType',\n    value: function isType(name) {\n      return this.settings.type === name;\n    }\n    /**\r\n     * Gets value of the core options.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: 'settings',\n    get: function get$$1() {\n      return this._o;\n    }\n    /**\r\n     * Sets value of the core options.\r\n     *\r\n     * @param  {Object} o\r\n     * @return {Void}\r\n     */\n    ,\n    set: function set$$1(o) {\n      if (isObject(o)) {\n        this._o = o;\n      } else {\n        warn('Options must be an `object` instance.');\n      }\n    }\n    /**\r\n     * Gets current index of the slider.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: 'index',\n    get: function get$$1() {\n      return this._i;\n    }\n    /**\r\n     * Sets current index a slider.\r\n     *\r\n     * @return {Object}\r\n     */\n    ,\n    set: function set$$1(i) {\n      this._i = toInt(i);\n    }\n    /**\r\n     * Gets type name of the slider.\r\n     *\r\n     * @return {String}\r\n     */\n\n  }, {\n    key: 'type',\n    get: function get$$1() {\n      return this.settings.type;\n    }\n    /**\r\n     * Gets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: 'disabled',\n    get: function get$$1() {\n      return this._d;\n    }\n    /**\r\n     * Sets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n    ,\n    set: function set$$1(status) {\n      this._d = !!status;\n    }\n  }]);\n  return Glide;\n}();\n\nfunction Run(Glide, Components, Events) {\n  var Run = {\n    /**\n     * Initializes autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this._o = false;\n    },\n\n    /**\n     * Makes glides running based on the passed moving schema.\n     *\n     * @param {String} move\n     */\n    make: function make(move) {\n      var _this = this;\n\n      if (!Glide.disabled) {\n        Glide.disable();\n        this.move = move;\n        Events.emit('run.before', this.move);\n        this.calculate();\n        Events.emit('run', this.move);\n        Components.Transition.after(function () {\n          if (_this.isStart()) {\n            Events.emit('run.start', _this.move);\n          }\n\n          if (_this.isEnd()) {\n            Events.emit('run.end', _this.move);\n          }\n\n          if (_this.isOffset('<') || _this.isOffset('>')) {\n            _this._o = false;\n            Events.emit('run.offset', _this.move);\n          }\n\n          Events.emit('run.after', _this.move);\n          Glide.enable();\n        });\n      }\n    },\n\n    /**\n     * Calculates current index based on defined move.\n     *\n     * @return {Void}\n     */\n    calculate: function calculate() {\n      var move = this.move,\n          length = this.length;\n      var steps = move.steps,\n          direction = move.direction;\n      var countableSteps = isNumber(toInt(steps)) && toInt(steps) !== 0;\n\n      switch (direction) {\n        case '>':\n          if (steps === '>') {\n            Glide.index = length;\n          } else if (this.isEnd()) {\n            if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\n              this._o = true;\n              Glide.index = 0;\n            }\n          } else if (countableSteps) {\n            Glide.index += Math.min(length - Glide.index, -toInt(steps));\n          } else {\n            Glide.index++;\n          }\n\n          break;\n\n        case '<':\n          if (steps === '<') {\n            Glide.index = 0;\n          } else if (this.isStart()) {\n            if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\n              this._o = true;\n              Glide.index = length;\n            }\n          } else if (countableSteps) {\n            Glide.index -= Math.min(Glide.index, toInt(steps));\n          } else {\n            Glide.index--;\n          }\n\n          break;\n\n        case '=':\n          Glide.index = steps;\n          break;\n\n        default:\n          warn('Invalid direction pattern [' + direction + steps + '] has been used');\n          break;\n      }\n    },\n\n    /**\n     * Checks if we are on the first slide.\n     *\n     * @return {Boolean}\n     */\n    isStart: function isStart() {\n      return Glide.index === 0;\n    },\n\n    /**\n     * Checks if we are on the last slide.\n     *\n     * @return {Boolean}\n     */\n    isEnd: function isEnd() {\n      return Glide.index === this.length;\n    },\n\n    /**\n     * Checks if we are making a offset run.\n     *\n     * @param {String} direction\n     * @return {Boolean}\n     */\n    isOffset: function isOffset(direction) {\n      return this._o && this.move.direction === direction;\n    }\n  };\n  define(Run, 'move', {\n    /**\n     * Gets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    get: function get() {\n      return this._m;\n    },\n\n    /**\n     * Sets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    set: function set(value) {\n      var step = value.substr(1);\n      this._m = {\n        direction: value.substr(0, 1),\n        steps: step ? toInt(step) ? toInt(step) : step : 0\n      };\n    }\n  });\n  define(Run, 'length', {\n    /**\n     * Gets value of the running distance based\n     * on zero-indexing number of slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n      var length = Components.Html.slides.length; // If the `bound` option is acitve, a maximum running distance should be\n      // reduced by `perView` and `focusAt` settings. Running distance\n      // should end before creating an empty space after instance.\n\n      if (Glide.isType('slider') && settings.focusAt !== 'center' && settings.bound) {\n        return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\n      }\n\n      return length - 1;\n    }\n  });\n  define(Run, 'offset', {\n    /**\n     * Gets status of the offsetting flag.\n     *\n     * @return {Boolean}\n     */\n    get: function get() {\n      return this._o;\n    }\n  });\n  return Run;\n}\n/**\n * Returns a current time.\n *\n * @return {Number}\n */\n\n\nfunction now() {\n  return new Date().getTime();\n}\n/**\n * Returns a function, that, when invoked, will only be triggered\n * at most once during a given window of time.\n *\n * @param {Function} func\n * @param {Number} wait\n * @param {Object=} options\n * @return {Function}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\n\nfunction throttle(func, wait, options) {\n  var timeout = void 0,\n      context = void 0,\n      args = void 0,\n      result = void 0;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function throttled() {\n    var at = now();\n    if (!previous && options.leading === false) previous = at;\n    var remaining = wait - (at - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n\n      previous = at;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n\nvar MARGIN_TYPE = {\n  ltr: ['marginLeft', 'marginRight'],\n  rtl: ['marginRight', 'marginLeft']\n};\n\nfunction Gaps(Glide, Components, Events) {\n  var Gaps = {\n    /**\n     * Applies gaps between slides. First and last\n     * slides do not receive it's edge margins.\n     *\n     * @param {HTMLCollection} slides\n     * @return {Void}\n     */\n    apply: function apply(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        var direction = Components.Direction.value;\n\n        if (i !== 0) {\n          style[MARGIN_TYPE[direction][0]] = this.value / 2 + 'px';\n        } else {\n          style[MARGIN_TYPE[direction][0]] = '';\n        }\n\n        if (i !== slides.length - 1) {\n          style[MARGIN_TYPE[direction][1]] = this.value / 2 + 'px';\n        } else {\n          style[MARGIN_TYPE[direction][1]] = '';\n        }\n      }\n    },\n\n    /**\n     * Removes gaps from the slides.\n     *\n     * @param {HTMLCollection} slides\n     * @returns {Void}\n    */\n    remove: function remove(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        style.marginLeft = '';\n        style.marginRight = '';\n      }\n    }\n  };\n  define(Gaps, 'value', {\n    /**\n     * Gets value of the gap.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return toInt(Glide.settings.gap);\n    }\n  });\n  define(Gaps, 'grow', {\n    /**\n     * Gets additional dimentions value caused by gaps.\n     * Used to increase width of the slides wrapper.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Gaps.value * (Components.Sizes.length - 1);\n    }\n  });\n  define(Gaps, 'reductor', {\n    /**\n     * Gets reduction value caused by gaps.\n     * Used to subtract width of the slides.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var perView = Glide.settings.perView;\n      return Gaps.value * (perView - 1) / perView;\n    }\n  });\n  /**\n   * Apply calculated gaps:\n   * - after building, so slides (including clones) will receive proper margins\n   * - on updating via API, to recalculate gaps with new options\n   */\n\n  Events.on(['build.after', 'update'], throttle(function () {\n    Gaps.apply(Components.Html.wrapper.children);\n  }, 30));\n  /**\n   * Remove gaps:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Gaps.remove(Components.Html.wrapper.children);\n  });\n  return Gaps;\n}\n/**\n * Finds siblings nodes of the passed node.\n *\n * @param  {Element} node\n * @return {Array}\n */\n\n\nfunction siblings(node) {\n  if (node && node.parentNode) {\n    var n = node.parentNode.firstChild;\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== node) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  }\n\n  return [];\n}\n/**\n * Checks if passed node exist and is a valid element.\n *\n * @param  {Element} node\n * @return {Boolean}\n */\n\n\nfunction exist(node) {\n  if (node && node instanceof window.HTMLElement) {\n    return true;\n  }\n\n  return false;\n}\n\nvar TRACK_SELECTOR = '[data-glide-el=\"track\"]';\n\nfunction Html(Glide, Components) {\n  var Html = {\n    /**\n     * Setup slider HTML nodes.\n     *\n     * @param {Glide} glide\n     */\n    mount: function mount() {\n      this.root = Glide.selector;\n      this.track = this.root.querySelector(TRACK_SELECTOR);\n      this.slides = Array.prototype.slice.call(this.wrapper.children).filter(function (slide) {\n        return !slide.classList.contains(Glide.settings.classes.cloneSlide);\n      });\n    }\n  };\n  define(Html, 'root', {\n    /**\n     * Gets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._r;\n    },\n\n    /**\n     * Sets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    set: function set(r) {\n      if (isString(r)) {\n        r = document.querySelector(r);\n      }\n\n      if (exist(r)) {\n        Html._r = r;\n      } else {\n        warn('Root element must be a existing Html node');\n      }\n    }\n  });\n  define(Html, 'track', {\n    /**\n     * Gets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._t;\n    },\n\n    /**\n     * Sets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    set: function set(t) {\n      if (exist(t)) {\n        Html._t = t;\n      } else {\n        warn('Could not find track element. Please use ' + TRACK_SELECTOR + ' attribute.');\n      }\n    }\n  });\n  define(Html, 'wrapper', {\n    /**\n     * Gets node of the slides wrapper.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html.track.children[0];\n    }\n  });\n  return Html;\n}\n\nfunction Peek(Glide, Components, Events) {\n  var Peek = {\n    /**\n     * Setups how much to peek based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.peek;\n    }\n  };\n  define(Peek, 'value', {\n    /**\n     * Gets value of the peek.\n     *\n     * @returns {Number|Object}\n     */\n    get: function get() {\n      return Peek._v;\n    },\n\n    /**\n     * Sets value of the peek.\n     *\n     * @param {Number|Object} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (isObject(value)) {\n        value.before = toInt(value.before);\n        value.after = toInt(value.after);\n      } else {\n        value = toInt(value);\n      }\n\n      Peek._v = value;\n    }\n  });\n  define(Peek, 'reductor', {\n    /**\n     * Gets reduction value caused by peek.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var value = Peek.value;\n      var perView = Glide.settings.perView;\n\n      if (isObject(value)) {\n        return value.before / perView + value.after / perView;\n      }\n\n      return value * 2 / perView;\n    }\n  });\n  /**\n   * Recalculate peeking sizes on:\n   * - when resizing window to update to proper percents\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Peek.mount();\n  });\n  return Peek;\n}\n\nfunction Move(Glide, Components, Events) {\n  var Move = {\n    /**\n     * Constructs move component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      this._o = 0;\n    },\n\n    /**\n     * Calculates a movement value based on passed offset and currently active index.\n     *\n     * @param  {Number} offset\n     * @return {Void}\n     */\n    make: function make() {\n      var _this = this;\n\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.offset = offset;\n      Events.emit('move', {\n        movement: this.value\n      });\n      Components.Transition.after(function () {\n        Events.emit('move.after', {\n          movement: _this.value\n        });\n      });\n    }\n  };\n  define(Move, 'offset', {\n    /**\n     * Gets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Move._o;\n    },\n\n    /**\n     * Sets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    set: function set(value) {\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\n    }\n  });\n  define(Move, 'translate', {\n    /**\n     * Gets a raw movement value.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Sizes.slideWidth * Glide.index;\n    }\n  });\n  define(Move, 'value', {\n    /**\n     * Gets an actual movement value corrected by offset.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var offset = this.offset;\n      var translate = this.translate;\n\n      if (Components.Direction.is('rtl')) {\n        return translate + offset;\n      }\n\n      return translate - offset;\n    }\n  });\n  /**\n   * Make movement to proper slide on:\n   * - before build, so glide will start at `startAt` index\n   * - on each standard run to move to newly calculated index\n   */\n\n  Events.on(['build.before', 'run'], function () {\n    Move.make();\n  });\n  return Move;\n}\n\nfunction Sizes(Glide, Components, Events) {\n  var Sizes = {\n    /**\n     * Setups dimentions of slides.\n     *\n     * @return {Void}\n     */\n    setupSlides: function setupSlides() {\n      var width = this.slideWidth + 'px';\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = width;\n      }\n    },\n\n    /**\n     * Setups dimentions of slides wrapper.\n     *\n     * @return {Void}\n     */\n    setupWrapper: function setupWrapper(dimention) {\n      Components.Html.wrapper.style.width = this.wrapperSize + 'px';\n    },\n\n    /**\n     * Removes applied styles from HTML elements.\n     *\n     * @returns {Void}\n     */\n    remove: function remove() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = '';\n      }\n\n      Components.Html.wrapper.style.width = '';\n    }\n  };\n  define(Sizes, 'length', {\n    /**\n     * Gets count number of the slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.slides.length;\n    }\n  });\n  define(Sizes, 'width', {\n    /**\n     * Gets width value of the glide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.root.offsetWidth;\n    }\n  });\n  define(Sizes, 'wrapperSize', {\n    /**\n     * Gets size of the slides wrapper.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n    }\n  });\n  define(Sizes, 'slideWidth', {\n    /**\n     * Gets width value of the single slide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n    }\n  });\n  /**\n   * Apply calculated glide's dimensions:\n   * - before building, so other dimentions (e.g. translate) will be calculated propertly\n   * - when resizing window to recalculate sildes dimensions\n   * - on updating via API, to calculate dimensions based on new options\n   */\n\n  Events.on(['build.before', 'resize', 'update'], function () {\n    Sizes.setupSlides();\n    Sizes.setupWrapper();\n  });\n  /**\n   * Remove calculated glide's dimensions:\n   * - on destoting to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Sizes.remove();\n  });\n  return Sizes;\n}\n\nfunction Build(Glide, Components, Events) {\n  var Build = {\n    /**\n     * Init glide building. Adds classes, sets\n     * dimensions and setups initial state.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      Events.emit('build.before');\n      this.typeClass();\n      this.activeClass();\n      Events.emit('build.after');\n    },\n\n    /**\n     * Adds `type` class to the glide element.\n     *\n     * @return {Void}\n     */\n    typeClass: function typeClass() {\n      Components.Html.root.classList.add(Glide.settings.classes[Glide.settings.type]);\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    activeClass: function activeClass() {\n      var classes = Glide.settings.classes;\n      var slide = Components.Html.slides[Glide.index];\n\n      if (slide) {\n        slide.classList.add(classes.activeSlide);\n        siblings(slide).forEach(function (sibling) {\n          sibling.classList.remove(classes.activeSlide);\n        });\n      }\n    },\n\n    /**\n     * Removes HTML classes applied at building.\n     *\n     * @return {Void}\n     */\n    removeClasses: function removeClasses() {\n      var classes = Glide.settings.classes;\n      Components.Html.root.classList.remove(classes[Glide.settings.type]);\n      Components.Html.slides.forEach(function (sibling) {\n        sibling.classList.remove(classes.activeSlide);\n      });\n    }\n  };\n  /**\n   * Clear building classes:\n   * - on destroying to bring HTML to its initial state\n   * - on updating to remove classes before remounting component\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Build.removeClasses();\n  });\n  /**\n   * Remount component:\n   * - on resizing of the window to calculate new dimentions\n   * - on updating settings via API\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Build.mount();\n  });\n  /**\n   * Swap active class of current slide:\n   * - after each move to the new index\n   */\n\n  Events.on('move.after', function () {\n    Build.activeClass();\n  });\n  return Build;\n}\n\nfunction Clones(Glide, Components, Events) {\n  var Clones = {\n    /**\n     * Create pattern map and collect slides to be cloned.\n     */\n    mount: function mount() {\n      this.items = [];\n\n      if (Glide.isType('carousel')) {\n        this.items = this.collect();\n      }\n    },\n\n    /**\n     * Collect clones with pattern.\n     *\n     * @return {Void}\n     */\n    collect: function collect() {\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var slides = Components.Html.slides;\n      var _Glide$settings = Glide.settings,\n          perView = _Glide$settings.perView,\n          classes = _Glide$settings.classes;\n      var peekIncrementer = +!!Glide.settings.peek;\n      var part = perView + peekIncrementer;\n      var start = slides.slice(0, part);\n      var end = slides.slice(-part);\n\n      for (var r = 0; r < Math.max(1, Math.floor(perView / slides.length)); r++) {\n        for (var i = 0; i < start.length; i++) {\n          var clone = start[i].cloneNode(true);\n          clone.classList.add(classes.cloneSlide);\n          items.push(clone);\n        }\n\n        for (var _i = 0; _i < end.length; _i++) {\n          var _clone = end[_i].cloneNode(true);\n\n          _clone.classList.add(classes.cloneSlide);\n\n          items.unshift(_clone);\n        }\n      }\n\n      return items;\n    },\n\n    /**\n     * Append cloned slides with generated pattern.\n     *\n     * @return {Void}\n     */\n    append: function append() {\n      var items = this.items;\n      var _Components$Html = Components.Html,\n          wrapper = _Components$Html.wrapper,\n          slides = _Components$Html.slides;\n      var half = Math.floor(items.length / 2);\n      var prepend = items.slice(0, half).reverse();\n      var append = items.slice(half, items.length);\n      var width = Components.Sizes.slideWidth + 'px';\n\n      for (var i = 0; i < append.length; i++) {\n        wrapper.appendChild(append[i]);\n      }\n\n      for (var _i2 = 0; _i2 < prepend.length; _i2++) {\n        wrapper.insertBefore(prepend[_i2], slides[0]);\n      }\n\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\n        items[_i3].style.width = width;\n      }\n    },\n\n    /**\n     * Remove all cloned slides.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      var items = this.items;\n\n      for (var i = 0; i < items.length; i++) {\n        Components.Html.wrapper.removeChild(items[i]);\n      }\n    }\n  };\n  define(Clones, 'grow', {\n    /**\n     * Gets additional dimentions value caused by clones.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n    }\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('update', function () {\n    Clones.remove();\n    Clones.mount();\n    Clones.append();\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('build.before', function () {\n    if (Glide.isType('carousel')) {\n      Clones.append();\n    }\n  });\n  /**\n   * Remove clones HTMLElements:\n   * - on destroying, to bring HTML to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Clones.remove();\n  });\n  return Clones;\n}\n\nvar EventsBinder = function () {\n  /**\n   * Construct a EventsBinder instance.\n   */\n  function EventsBinder() {\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, EventsBinder);\n    this.listeners = listeners;\n  }\n  /**\n   * Adds events listeners to arrows HTML elements.\n   *\n   * @param  {String|Array} events\n   * @param  {Element|Window|Document} el\n   * @param  {Function} closure\n   * @param  {Boolean|Object} capture\n   * @return {Void}\n   */\n\n\n  createClass(EventsBinder, [{\n    key: 'on',\n    value: function on(events, el, closure) {\n      var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        this.listeners[events[i]] = closure;\n        el.addEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Removes event listeners from arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @param  {Boolean|Object} capture\n     * @return {Void}\n     */\n\n  }, {\n    key: 'off',\n    value: function off(events, el) {\n      var capture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        el.removeEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Destroy collected listeners.\n     *\n     * @returns {Void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      delete this.listeners;\n    }\n  }]);\n  return EventsBinder;\n}();\n\nfunction Resize(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Resize = {\n    /**\n     * Initializes window bindings.\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `rezsize` listener to the window.\n     * It's a costly event, so we are debouncing it.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('resize', window, throttle(function () {\n        Events.emit('resize');\n      }, Glide.settings.throttle));\n    },\n\n    /**\n     * Unbinds listeners from the window.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('resize', window);\n    }\n  };\n  /**\n   * Remove bindings from window:\n   * - on destroying, to remove added EventListener\n   */\n\n  Events.on('destroy', function () {\n    Resize.unbind();\n    Binder.destroy();\n  });\n  return Resize;\n}\n\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\nvar FLIPED_MOVEMENTS = {\n  '>': '<',\n  '<': '>',\n  '=': '='\n};\n\nfunction Direction(Glide, Components, Events) {\n  var Direction = {\n    /**\n     * Setups gap value based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.direction;\n    },\n\n    /**\n     * Resolves pattern based on direction value\n     *\n     * @param {String} pattern\n     * @returns {String}\n     */\n    resolve: function resolve(pattern) {\n      var token = pattern.slice(0, 1);\n\n      if (this.is('rtl')) {\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n      }\n\n      return pattern;\n    },\n\n    /**\n     * Checks value of direction mode.\n     *\n     * @param {String} direction\n     * @returns {Boolean}\n     */\n    is: function is(direction) {\n      return this.value === direction;\n    },\n\n    /**\n     * Applies direction class to the root HTML element.\n     *\n     * @return {Void}\n     */\n    addClass: function addClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n    },\n\n    /**\n     * Removes direction class from the root HTML element.\n     *\n     * @return {Void}\n     */\n    removeClass: function removeClass() {\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n    }\n  };\n  define(Direction, 'value', {\n    /**\n     * Gets value of the direction.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Direction._v;\n    },\n\n    /**\n     * Sets value of the direction.\n     *\n     * @param {String} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\n        Direction._v = value;\n      } else {\n        warn('Direction value must be `ltr` or `rtl`');\n      }\n    }\n  });\n  /**\n   * Clear direction class:\n   * - on destroy to bring HTML to its initial state\n   * - on update to remove class before reappling bellow\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Direction.removeClass();\n  });\n  /**\n   * Remount component:\n   * - on update to reflect changes in direction value\n   */\n\n  Events.on('update', function () {\n    Direction.mount();\n  });\n  /**\n   * Apply direction class:\n   * - before building to apply class for the first time\n   * - on updating to reapply direction class that may changed\n   */\n\n  Events.on(['build.before', 'update'], function () {\n    Direction.addClass();\n  });\n  return Direction;\n}\n/**\n * Reflects value of glide movement.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\n\nfunction Rtl(Glide, Components) {\n  return {\n    /**\n     * Negates the passed translate if glide is in RTL option.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Components.Direction.is('rtl')) {\n        return -translate;\n      }\n\n      return translate;\n    }\n  };\n}\n/**\n * Updates glide movement with a `gap` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\n\nfunction Gap(Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with number in the `gap` settings.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Gaps.value * Glide.index;\n    }\n  };\n}\n/**\n * Updates glide movement with width of additional clones width.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\n\nfunction Grow(Glide, Components) {\n  return {\n    /**\n     * Adds to the passed translate width of the half of clones.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Clones.grow / 2;\n    }\n  };\n}\n/**\n * Updates glide movement with a `peek` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\n\nfunction Peeking(Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with a `peek` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Glide.settings.focusAt >= 0) {\n        var peek = Components.Peek.value;\n\n        if (isObject(peek)) {\n          return translate - peek.before;\n        }\n\n        return translate - peek;\n      }\n\n      return translate;\n    }\n  };\n}\n/**\n * Updates glide movement with a `focusAt` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\n\nfunction Focusing(Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with index in the `focusAt` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var gap = Components.Gaps.value;\n      var width = Components.Sizes.width;\n      var focusAt = Glide.settings.focusAt;\n      var slideWidth = Components.Sizes.slideWidth;\n\n      if (focusAt === 'center') {\n        return translate - (width / 2 - slideWidth / 2);\n      }\n\n      return translate - slideWidth * focusAt - gap * focusAt;\n    }\n  };\n}\n/**\n * Applies diffrent transformers on translate value.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\n\nfunction mutator(Glide, Components, Events) {\n  /**\n   * Merge instance transformers with collection of default transformers.\n   * It's important that the Rtl component be last on the list,\n   * so it reflects all previous transformations.\n   *\n   * @type {Array}\n   */\n  var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\n  return {\n    /**\n     * Piplines translate value with registered transformers.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    mutate: function mutate(translate) {\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\n        var transformer = TRANSFORMERS[i];\n\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\n          translate = transformer(Glide, Components, Events).modify(translate);\n        } else {\n          warn('Transformer should be a function that returns an object with `modify()` method');\n        }\n      }\n\n      return translate;\n    }\n  };\n}\n\nfunction Translate(Glide, Components, Events) {\n  var Translate = {\n    /**\n     * Sets value of translate on HTML element.\n     *\n     * @param {Number} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      var transform = mutator(Glide, Components).mutate(value);\n      Components.Html.wrapper.style.transform = 'translate3d(' + -1 * transform + 'px, 0px, 0px)';\n    },\n\n    /**\n     * Removes value of translate from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transform = '';\n    }\n  };\n  /**\n   * Set new translate value:\n   * - on move to reflect index change\n   * - on updating via API to reflect possible changes in options\n   */\n\n  Events.on('move', function (context) {\n    var gap = Components.Gaps.value;\n    var length = Components.Sizes.length;\n    var width = Components.Sizes.slideWidth;\n\n    if (Glide.isType('carousel') && Components.Run.isOffset('<')) {\n      Components.Transition.after(function () {\n        Events.emit('translate.jump');\n        Translate.set(width * (length - 1));\n      });\n      return Translate.set(-width - gap * length);\n    }\n\n    if (Glide.isType('carousel') && Components.Run.isOffset('>')) {\n      Components.Transition.after(function () {\n        Events.emit('translate.jump');\n        Translate.set(0);\n      });\n      return Translate.set(width * length + gap * length);\n    }\n\n    return Translate.set(context.movement);\n  });\n  /**\n   * Remove translate:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Translate.remove();\n  });\n  return Translate;\n}\n\nfunction Transition(Glide, Components, Events) {\n  /**\n   * Holds inactivity status of transition.\n   * When true transition is not applied.\n   *\n   * @type {Boolean}\n   */\n  var disabled = false;\n  var Transition = {\n    /**\n     * Composes string of the CSS transition.\n     *\n     * @param {String} property\n     * @return {String}\n     */\n    compose: function compose(property) {\n      var settings = Glide.settings;\n\n      if (!disabled) {\n        return property + ' ' + this.duration + 'ms ' + settings.animationTimingFunc;\n      }\n\n      return property + ' 0ms ' + settings.animationTimingFunc;\n    },\n\n    /**\n     * Sets value of transition on HTML element.\n     *\n     * @param {String=} property\n     * @return {Void}\n     */\n    set: function set() {\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n      Components.Html.wrapper.style.transition = this.compose(property);\n    },\n\n    /**\n     * Removes value of transition from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transition = '';\n    },\n\n    /**\n     * Runs callback after animation.\n     *\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    after: function after(callback) {\n      setTimeout(function () {\n        callback();\n      }, this.duration);\n    },\n\n    /**\n     * Enable transition.\n     *\n     * @return {Void}\n     */\n    enable: function enable() {\n      disabled = false;\n      this.set();\n    },\n\n    /**\n     * Disable transition.\n     *\n     * @return {Void}\n     */\n    disable: function disable() {\n      disabled = true;\n      this.set();\n    }\n  };\n  define(Transition, 'duration', {\n    /**\n     * Gets duration of the transition based\n     * on currently running animation type.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n\n      if (Glide.isType('slider') && Components.Run.offset) {\n        return settings.rewindDuration;\n      }\n\n      return settings.animationDuration;\n    }\n  });\n  /**\n   * Set transition `style` value:\n   * - on each moving, because it may be cleared by offset move\n   */\n\n  Events.on('move', function () {\n    Transition.set();\n  });\n  /**\n   * Disable transition:\n   * - before initial build to avoid transitioning from `0` to `startAt` index\n   * - while resizing window and recalculating dimentions\n   * - on jumping from offset transition at start and end edges in `carousel` type\n   */\n\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\n    Transition.disable();\n  });\n  /**\n   * Enable transition:\n   * - on each running, because it may be disabled by offset move\n   */\n\n  Events.on('run', function () {\n    Transition.enable();\n  });\n  /**\n   * Remove transition:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Transition.remove();\n  });\n  return Transition;\n}\n/**\n * Test via a getter in the options object to see\n * if the passive property is accessed.\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\n\n\nvar supportsPassive = false;\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      supportsPassive = true;\n    }\n  });\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\nvar supportsPassive$1 = supportsPassive;\nvar START_EVENTS = ['touchstart', 'mousedown'];\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n\nfunction Swipe(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var swipeSin = 0;\n  var swipeStartX = 0;\n  var swipeStartY = 0;\n  var disabled = false;\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Swipe = {\n    /**\n     * Initializes swipe bindings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bindSwipeStart();\n    },\n\n    /**\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    start: function start(event) {\n      if (!disabled && !Glide.disabled) {\n        this.disable();\n        var swipe = this.touches(event);\n        swipeSin = null;\n        swipeStartX = toInt(swipe.pageX);\n        swipeStartY = toInt(swipe.pageY);\n        this.bindSwipeMove();\n        this.bindSwipeEnd();\n        Events.emit('swipe.start');\n      }\n    },\n\n    /**\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\n     *\n     * @param {Object} event\n     */\n    move: function move(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings = Glide.settings,\n            touchAngle = _Glide$settings.touchAngle,\n            touchRatio = _Glide$settings.touchRatio,\n            classes = _Glide$settings.classes;\n        var swipe = this.touches(event);\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\n        var powEX = Math.abs(subExSx << 2);\n        var powEY = Math.abs(subEySy << 2);\n        var swipeHypotenuse = Math.sqrt(powEX + powEY);\n        var swipeCathetus = Math.sqrt(powEY);\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n\n        if (swipeSin * 180 / Math.PI < touchAngle) {\n          event.stopPropagation();\n          Components.Move.make(subExSx * toFloat(touchRatio));\n          Components.Html.root.classList.add(classes.dragging);\n          Events.emit('swipe.move');\n        } else {\n          return false;\n        }\n      }\n    },\n\n    /**\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    end: function end(event) {\n      if (!Glide.disabled) {\n        var settings = Glide.settings;\n        var swipe = this.touches(event);\n        var threshold = this.threshold(event);\n        var swipeDistance = swipe.pageX - swipeStartX;\n        var swipeDeg = swipeSin * 180 / Math.PI;\n        var steps = Math.round(swipeDistance / Components.Sizes.slideWidth);\n        this.enable();\n\n        if (swipeDistance > threshold && swipeDeg < settings.touchAngle) {\n          // While swipe is positive and greater than threshold move backward.\n          if (settings.perTouch) {\n            steps = Math.min(steps, toInt(settings.perTouch));\n          }\n\n          if (Components.Direction.is('rtl')) {\n            steps = -steps;\n          }\n\n          Components.Run.make(Components.Direction.resolve('<' + steps));\n        } else if (swipeDistance < -threshold && swipeDeg < settings.touchAngle) {\n          // While swipe is negative and lower than negative threshold move forward.\n          if (settings.perTouch) {\n            steps = Math.max(steps, -toInt(settings.perTouch));\n          }\n\n          if (Components.Direction.is('rtl')) {\n            steps = -steps;\n          }\n\n          Components.Run.make(Components.Direction.resolve('>' + steps));\n        } else {\n          // While swipe don't reach distance apply previous transform.\n          Components.Move.make();\n        }\n\n        Components.Html.root.classList.remove(settings.classes.dragging);\n        this.unbindSwipeMove();\n        this.unbindSwipeEnd();\n        Events.emit('swipe.end');\n      }\n    },\n\n    /**\n     * Binds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    bindSwipeStart: function bindSwipeStart() {\n      var _this = this;\n\n      var settings = Glide.settings;\n\n      if (settings.swipeThreshold) {\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n\n      if (settings.dragThreshold) {\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n    },\n\n    /**\n     * Unbinds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeStart: function unbindSwipeStart() {\n      Binder.off(START_EVENTS[0], Components.Html.wrapper, capture);\n      Binder.off(START_EVENTS[1], Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    bindSwipeMove: function bindSwipeMove() {\n      var _this2 = this;\n\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\n        _this2.move(event);\n      }, Glide.settings.throttle), capture);\n    },\n\n    /**\n     * Unbinds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeMove: function unbindSwipeMove() {\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    bindSwipeEnd: function bindSwipeEnd() {\n      var _this3 = this;\n\n      Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\n        _this3.end(event);\n      });\n    },\n\n    /**\n     * Unbinds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeEnd: function unbindSwipeEnd() {\n      Binder.off(END_EVENTS, Components.Html.wrapper);\n    },\n\n    /**\n     * Normalizes event touches points accorting to different types.\n     *\n     * @param {Object} event\n     */\n    touches: function touches(event) {\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return event;\n      }\n\n      return event.touches[0] || event.changedTouches[0];\n    },\n\n    /**\n     * Gets value of minimum swipe distance settings based on event type.\n     *\n     * @return {Number}\n     */\n    threshold: function threshold(event) {\n      var settings = Glide.settings;\n\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return settings.dragThreshold;\n      }\n\n      return settings.swipeThreshold;\n    },\n\n    /**\n     * Enables swipe event.\n     *\n     * @return {self}\n     */\n    enable: function enable() {\n      disabled = false;\n      Components.Transition.enable();\n      return this;\n    },\n\n    /**\n     * Disables swipe event.\n     *\n     * @return {self}\n     */\n    disable: function disable() {\n      disabled = true;\n      Components.Transition.disable();\n      return this;\n    }\n  };\n  /**\n   * Add component class:\n   * - after initial building\n   */\n\n  Events.on('build.after', function () {\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n  });\n  /**\n   * Remove swiping bindings:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Swipe.unbindSwipeStart();\n    Swipe.unbindSwipeMove();\n    Swipe.unbindSwipeEnd();\n    Binder.destroy();\n  });\n  return Swipe;\n}\n\nfunction Images(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Images = {\n    /**\n     * Binds listener to glide wrapper.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `dragstart` event on wrapper to prevent dragging images.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n    },\n\n    /**\n     * Unbinds `dragstart` event on wrapper.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('dragstart', Components.Html.wrapper);\n    },\n\n    /**\n     * Event handler. Prevents dragging.\n     *\n     * @return {Void}\n     */\n    dragstart: function dragstart(event) {\n      event.preventDefault();\n    }\n  };\n  /**\n   * Remove bindings from images:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Images.unbind();\n    Binder.destroy();\n  });\n  return Images;\n}\n\nfunction Anchors(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds detaching status of anchors.\n   * Prevents detaching of already detached anchors.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var detached = false;\n  /**\n   * Holds preventing status of anchors.\n   * If `true` redirection after click will be disabled.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var prevented = false;\n  var Anchors = {\n    /**\n     * Setups a initial state of anchors component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      /**\n       * Holds collection of anchors elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._a = Components.Html.wrapper.querySelectorAll('a');\n      this.bind();\n    },\n\n    /**\n     * Binds events to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('click', Components.Html.wrapper, this.click);\n    },\n\n    /**\n     * Unbinds events attached to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('click', Components.Html.wrapper);\n    },\n\n    /**\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      if (prevented) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    },\n\n    /**\n     * Detaches anchors click event inside glide.\n     *\n     * @return {self}\n     */\n    detach: function detach() {\n      prevented = true;\n\n      if (!detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = false;\n          this.items[i].setAttribute('data-href', this.items[i].getAttribute('href'));\n          this.items[i].removeAttribute('href');\n        }\n\n        detached = true;\n      }\n\n      return this;\n    },\n\n    /**\n     * Attaches anchors click events inside glide.\n     *\n     * @return {self}\n     */\n    attach: function attach() {\n      prevented = false;\n\n      if (detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = true;\n          this.items[i].setAttribute('href', this.items[i].getAttribute('data-href'));\n        }\n\n        detached = false;\n      }\n\n      return this;\n    }\n  };\n  define(Anchors, 'items', {\n    /**\n     * Gets collection of the arrows HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Anchors._a;\n    }\n  });\n  /**\n   * Detach anchors inside slides:\n   * - on swiping, so they won't redirect to its `href` attributes\n   */\n\n  Events.on('swipe.move', function () {\n    Anchors.detach();\n  });\n  /**\n   * Attach anchors inside slides:\n   * - after swiping and transitions ends, so they can redirect after click again\n   */\n\n  Events.on('swipe.end', function () {\n    Components.Transition.after(function () {\n      Anchors.attach();\n    });\n  });\n  /**\n   * Unbind anchors inside slides:\n   * - on destroying, to bring anchors to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Anchors.attach();\n    Anchors.unbind();\n    Binder.destroy();\n  });\n  return Anchors;\n}\n\nvar NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\nvar CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\n\nfunction Controls(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Controls = {\n    /**\n     * Inits arrows. Binds events listeners\n     * to the arrows HTML elements.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      /**\n       * Collection of navigation HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n      /**\n       * Collection of controls HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n      this.addBindings();\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    setActive: function setActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.addClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Removes active class to current slide.\n     *\n     * @return {Void}\n     */\n    removeActive: function removeActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.removeClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Toggles active class on items inside navigation.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    addClass: function addClass(controls) {\n      var settings = Glide.settings;\n      var item = controls[Glide.index];\n\n      if (item) {\n        item.classList.add(settings.classes.activeNav);\n        siblings(item).forEach(function (sibling) {\n          sibling.classList.remove(settings.classes.activeNav);\n        });\n      }\n    },\n\n    /**\n     * Removes active class from active control.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    removeClass: function removeClass(controls) {\n      var item = controls[Glide.index];\n\n      if (item) {\n        item.classList.remove(Glide.settings.classes.activeNav);\n      }\n    },\n\n    /**\n     * Adds handles to the each group of controls.\n     *\n     * @return {Void}\n     */\n    addBindings: function addBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.bind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Removes handles from the each group of controls.\n     *\n     * @return {Void}\n     */\n    removeBindings: function removeBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.unbind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Binds events to arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    bind: function bind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.on('click', elements[i], this.click);\n        Binder.on('touchstart', elements[i], this.click, capture);\n      }\n    },\n\n    /**\n     * Unbinds events binded to the arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    unbind: function unbind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.off(['click', 'touchstart'], elements[i]);\n      }\n    },\n\n    /**\n     * Handles `click` event on the arrows HTML elements.\n     * Moves slider in driection precised in\n     * `data-glide-dir` attribute.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      event.preventDefault();\n      Components.Run.make(Components.Direction.resolve(event.currentTarget.getAttribute('data-glide-dir')));\n    }\n  };\n  define(Controls, 'items', {\n    /**\n     * Gets collection of the controls HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Controls._c;\n    }\n  });\n  /**\n   * Swap active class of current navigation item:\n   * - after mounting to set it to initial index\n   * - after each move to the new index\n   */\n\n  Events.on(['mount.after', 'move.after'], function () {\n    Controls.setActive();\n  });\n  /**\n   * Remove bindings and HTML Classes:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Controls.removeBindings();\n    Controls.removeActive();\n    Binder.destroy();\n  });\n  return Controls;\n}\n\nfunction Keyboard(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Keyboard = {\n    /**\n     * Binds keyboard events on component mount.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      if (Glide.settings.keyboard) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Adds keyboard press events.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('keyup', document, this.press);\n    },\n\n    /**\n     * Removes keyboard press events.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('keyup', document);\n    },\n\n    /**\n     * Handles keyboard's arrows press and moving glide foward and backward.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    press: function press(event) {\n      if (event.keyCode === 39) {\n        Components.Run.make(Components.Direction.resolve('>'));\n      }\n\n      if (event.keyCode === 37) {\n        Components.Run.make(Components.Direction.resolve('<'));\n      }\n    }\n  };\n  /**\n   * Remove bindings from keyboard:\n   * - on destroying to remove added events\n   * - on updating to remove events before remounting\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Keyboard.unbind();\n  });\n  /**\n   * Remount component\n   * - on updating to reflect potential changes in settings\n   */\n\n  Events.on('update', function () {\n    Keyboard.mount();\n  });\n  /**\n   * Destroy binder:\n   * - on destroying to remove listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Keyboard;\n}\n\nfunction Autoplay(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Autoplay = {\n    /**\n     * Initializes autoplaying and events.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.start();\n\n      if (Glide.settings.hoverpause) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Starts autoplaying in configured interval.\n     *\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n     * @return {Void}\n     */\n    start: function start() {\n      var _this = this;\n\n      if (Glide.settings.autoplay) {\n        if (isUndefined(this._i)) {\n          this._i = setInterval(function () {\n            _this.stop();\n\n            Components.Run.make('>');\n\n            _this.start();\n          }, this.time);\n        }\n      }\n    },\n\n    /**\n     * Stops autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    stop: function stop() {\n      this._i = clearInterval(this._i);\n    },\n\n    /**\n     * Stops autoplaying while mouse is over glide's area.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      var _this2 = this;\n\n      Binder.on('mouseover', Components.Html.root, function () {\n        _this2.stop();\n      });\n      Binder.on('mouseout', Components.Html.root, function () {\n        _this2.start();\n      });\n    },\n\n    /**\n     * Unbind mouseover events.\n     *\n     * @returns {Void}\n     */\n    unbind: function unbind() {\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n    }\n  };\n  define(Autoplay, 'time', {\n    /**\n     * Gets time period value for the autoplay interval. Prioritizes\n     * times in `data-glide-autoplay` attrubutes over options.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n\n      if (autoplay) {\n        return toInt(autoplay);\n      }\n\n      return toInt(Glide.settings.autoplay);\n    }\n  });\n  /**\n   * Stop autoplaying and unbind events:\n   * - on destroying, to clear defined interval\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Autoplay.unbind();\n  });\n  /**\n   * Stop autoplaying:\n   * - before each run, to restart autoplaying\n   * - on pausing via API\n   * - on destroying, to clear defined interval\n   * - while starting a swipe\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['run.before', 'pause', 'destroy', 'swipe.start', 'update'], function () {\n    Autoplay.stop();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['run.after', 'play', 'swipe.end'], function () {\n    Autoplay.start();\n  });\n  /**\n   * Remount autoplaying:\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on('update', function () {\n    Autoplay.mount();\n  });\n  /**\n   * Destroy a binder:\n   * - on destroying glide instance to clearup listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Autoplay;\n}\n/**\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n *\n * @param {Object} points\n * @returns {Object}\n */\n\n\nfunction sortBreakpoints(points) {\n  if (isObject(points)) {\n    return sortKeys(points);\n  } else {\n    warn('Breakpoints option must be an object');\n  }\n\n  return {};\n}\n\nfunction Breakpoints(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds reference to settings.\n   *\n   * @type {Object}\n   */\n\n  var settings = Glide.settings;\n  /**\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\n   * from smaller to larger. It is required in order to proper\n   * matching currently active breakpoint settings.\n   *\n   * @type {Object}\n   */\n\n  var points = sortBreakpoints(settings.breakpoints);\n  /**\n   * Cache initial settings before overwritting.\n   *\n   * @type {Object}\n   */\n\n  var defaults = _extends({}, settings);\n\n  var Breakpoints = {\n    /**\n     * Matches settings for currectly matching media breakpoint.\n     *\n     * @param {Object} points\n     * @returns {Object}\n     */\n    match: function match(points) {\n      if (typeof window.matchMedia !== 'undefined') {\n        for (var point in points) {\n          if (points.hasOwnProperty(point)) {\n            if (window.matchMedia('(max-width: ' + point + 'px)').matches) {\n              return points[point];\n            }\n          }\n        }\n      }\n\n      return defaults;\n    }\n  };\n  /**\n   * Overwrite instance settings with currently matching breakpoint settings.\n   * This happens right after component initialization.\n   */\n\n  _extends(settings, Breakpoints.match(points));\n  /**\n   * Update glide with settings of matched brekpoint:\n   * - window resize to update slider\n   */\n\n\n  Binder.on('resize', window, throttle(function () {\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points));\n  }, Glide.settings.throttle));\n  /**\n   * Resort and update default settings:\n   * - on reinit via API, so breakpoint matching will be performed with options\n   */\n\n  Events.on('update', function () {\n    points = sortBreakpoints(points);\n    defaults = _extends({}, settings);\n  });\n  /**\n   * Unbind resize listener:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Binder.off('resize', window);\n  });\n  return Breakpoints;\n}\n\nvar COMPONENTS = {\n  // Required\n  Html: Html,\n  Translate: Translate,\n  Transition: Transition,\n  Direction: Direction,\n  Peek: Peek,\n  Sizes: Sizes,\n  Gaps: Gaps,\n  Move: Move,\n  Clones: Clones,\n  Resize: Resize,\n  Build: Build,\n  Run: Run,\n  // Optional\n  Swipe: Swipe,\n  Images: Images,\n  Anchors: Anchors,\n  Controls: Controls,\n  Keyboard: Keyboard,\n  Autoplay: Autoplay,\n  Breakpoints: Breakpoints\n};\n\nvar Glide$1 = function (_Core) {\n  inherits(Glide$$1, _Core);\n\n  function Glide$$1() {\n    classCallCheck(this, Glide$$1);\n    return possibleConstructorReturn(this, (Glide$$1.__proto__ || Object.getPrototypeOf(Glide$$1)).apply(this, arguments));\n  }\n\n  createClass(Glide$$1, [{\n    key: 'mount',\n    value: function mount() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return get(Glide$$1.prototype.__proto__ || Object.getPrototypeOf(Glide$$1.prototype), 'mount', this).call(this, _extends({}, COMPONENTS, extensions));\n    }\n  }]);\n  return Glide$$1;\n}(Glide);\n\nexport default Glide$1;"],"sourceRoot":""}